// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsAggregator.DataAccess;

#nullable disable

namespace NewsAggregator.DataAccess.Migrations
{
    [DbContext(typeof(NewsAggregatorDbContext))]
    partial class NewsAggregatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NewsAggregator.Domain.Entities.Ad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdActive")
                        .HasColumnType("bit");

                    b.Property<string>("RedirectUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ad", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdName = "Netflix",
                            BannerImageUrl = "https://res.cloudinary.com/practicaldev/image/fetch/s--THrf5Yjw--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6brz4p7iq7j1mulo1nv.jpg",
                            ImageUrl = "https://variety.com/wp-content/uploads/2019/03/netflix-logo-n-icon.png",
                            IsAdActive = true,
                            RedirectUrl = "https://www.netflix.com"
                        },
                        new
                        {
                            Id = 2,
                            AdName = "Hbo",
                            BannerImageUrl = "https://cdnb.artstation.com/p/assets/images/images/027/198/593/large/mikhail-villarreal-bannerhbodceu-byalde.jpg?1590863405",
                            ImageUrl = "https://s3.amazonaws.com/media.mediapost.com/dam/cropped/2021/06/02/hbomax-plansstartat999-600_4vXDoJJ.jpg",
                            IsAdActive = true,
                            RedirectUrl = "https://www.hbomax.com/"
                        },
                        new
                        {
                            Id = 3,
                            AdName = "Nike",
                            BannerImageUrl = "https://uploads-ssl.webflow.com/5e72757e442fcb191b4823c0/5ea8b5ddeffbba465d0d010f_nike-lunar3.jpg",
                            ImageUrl = "https://www.marketing91.com/wp-content/uploads/2020/06/Growth-of-Nike-Advertising.jpg",
                            IsAdActive = true,
                            RedirectUrl = "https://www.nike.com/"
                        },
                        new
                        {
                            Id = 4,
                            AdName = "Razer Huntsman V2",
                            BannerImageUrl = "https://assets2.razerzone.com/images/pnx.assets/1ab71e5ea9f9b8db8fc014cf8d767732/razer-huntsman-v2-hero-desktop.jpg",
                            ImageUrl = "https://g-h.sgp1.digitaloceanspaces.com/wp-content/uploads/2021/10/11105246/RAZER-LANDING-PAGE_1TOP-BANNER-MOB-copy-5-800x800.png",
                            IsAdActive = true,
                            RedirectUrl = "https://www.razer.com/gaming-keyboards/razer-huntsman-v2"
                        },
                        new
                        {
                            Id = 5,
                            AdName = "WizzAir",
                            BannerImageUrl = "https://pbs.twimg.com/media/DdT-s6NW4AAEOEi.jpg",
                            ImageUrl = "https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/d9b02f1619767.560d88eed515a.jpg",
                            IsAdActive = true,
                            RedirectUrl = "https://wizzair.com/en-gb"
                        },
                        new
                        {
                            Id = 6,
                            AdName = "Asus ROG strix",
                            BannerImageUrl = "https://dlcdnwebimgs.asus.com/gain/F9741FD2-725D-4134-B0EB-C3E6F0FA7FF0/fwebp",
                            ImageUrl = "https://cdn.dribbble.com/users/5349551/screenshots/12021171/media/99c46cd52abd90cf754f5d0bba81f08b.png?compress=1&resize=400x300",
                            IsAdActive = true,
                            RedirectUrl = "https://rog.asus.com/my/laptops/rog-strix/rog-strix-scar-17-2022-series/"
                        },
                        new
                        {
                            Id = 7,
                            AdName = "Plural Sight",
                            BannerImageUrl = "https://www.sec.gov/Archives/edgar/data/1725579/000162828019002420/pluralsightlogob01.jpg",
                            ImageUrl = "https://hmgstrategy1.blob.core.windows.net/hmgfiles/images/default-source/default-album/29482-17_pluralsightad_bl_vf48e7ddc52aed6fb2b0cbff05006a1c82.jpg?sfvrsn=9d0ab2f5_0",
                            IsAdActive = true,
                            RedirectUrl = "https://www.pluralsight.com"
                        },
                        new
                        {
                            Id = 8,
                            AdName = "Seavus Education and Development Center",
                            BannerImageUrl = "https://www.cpdstandards.com/wp-content/uploads/2021/08/SEDC-Logo.png",
                            ImageUrl = "https://masit.org.mk/wp-content/uploads/2019/12/sedc.jpg",
                            IsAdActive = true,
                            RedirectUrl = "https://www.sedc.mk/"
                        },
                        new
                        {
                            Id = 9,
                            AdName = "Spotify",
                            BannerImageUrl = "https://www.techadvisor.com/wp-content/uploads/2022/06/best-spotify-tips-and-tricks-banner.png",
                            ImageUrl = "https://static-prod.adweek.com/wp-content/uploads/2022/01/spotify-podcast-ads-cta-2022-652x342.jpg",
                            IsAdActive = true,
                            RedirectUrl = "https://open.spotify.com/"
                        },
                        new
                        {
                            Id = 10,
                            AdName = "IPhone 14 Pro",
                            BannerImageUrl = "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/iphone-14-model-unselect-gallery-2-202209_FMT_WHH?wid=1280&hei=492&fmt=p-jpg&qlt=80&.v=1660745126020",
                            ImageUrl = "https://www.apple.com/newsroom/images/product/iphone/standard/Apple-iPhone-14-Pro-iPhone-14-Pro-Max-hero-220907.jpg.og.jpg?202209271408",
                            IsAdActive = true,
                            RedirectUrl = "https://www.apple.com/iphone-14-pro/"
                        },
                        new
                        {
                            Id = 11,
                            AdName = "Unity",
                            BannerImageUrl = "https://1000logos.net/wp-content/uploads/2021/10/Unity-logo.png",
                            ImageUrl = "https://eu-images.contentstack.com/v3/assets/blt95b381df7c12c15d/bltbad33f5fea52f290/615c93d89aad297e10087704/Screen_Shot_2021-10-05_at_2.04.58_PM.png",
                            IsAdActive = true,
                            RedirectUrl = "https://unity.com"
                        },
                        new
                        {
                            Id = 12,
                            AdName = "Coca Cola",
                            BannerImageUrl = "https://thumbs.dreamstime.com/b/large-famous-coca-cola-advertisement-banner-letters-minsk-belarus-june-red-colour-white-bottle-sign-under-bright-192933328.jpg",
                            ImageUrl = "https://media-assets-02.thedrum.com/cache/images/thedrum-prod/s3-news-tmp-304828-coco-cola_brand--default--968.jpg",
                            IsAdActive = true,
                            RedirectUrl = "https://www.coca-cola.com/"
                        },
                        new
                        {
                            Id = 13,
                            AdName = "Nintendo Switch",
                            BannerImageUrl = "https://assets.nintendo.com/image/upload/f_auto/q_auto/dpr_2.625/c_scale/ncom/en_US/switch/site-design-update/switch-family",
                            ImageUrl = "https://preview.redd.it/4sf8pdnbd2v01.jpg?width=640&crop=smart&auto=webp&s=81b0573ebac985ea222ab5029216c14c39230c80",
                            IsAdActive = true,
                            RedirectUrl = "https://www.nintendo.com/switch/"
                        },
                        new
                        {
                            Id = 14,
                            AdName = "Sony Playstation 5",
                            BannerImageUrl = "https://cdn.vox-cdn.com/thumbor/s0V50B4OAK9K05tKM0IOEXcSFn0=/0x0:2450x1628/1400x788/filters:focal(1225x814:1226x815)/cdn.vox-cdn.com/uploads/chorus_asset/file/20081590/ps5.png",
                            ImageUrl = "https://www.slashgear.com/img/gallery/watch-sonys-first-playstation-5-tv-ad-talk-dualsense-and-3d-audio/intro-import.jpg",
                            IsAdActive = true,
                            RedirectUrl = "https://www.playstation.com/en-us/ps5/"
                        },
                        new
                        {
                            Id = 15,
                            AdName = "Mc'Donalds",
                            BannerImageUrl = "https://i.kinja-img.com/gawker-media/image/upload/c_fill,f_auto,fl_progressive,g_center,h_675,pg_1,q_80,w_1200/qt1pq58r827iyyvugjfr.jpg",
                            ImageUrl = "https://pbs.twimg.com/profile_images/1579916871654117376/Dxd2l1sN_400x400.png",
                            IsAdActive = true,
                            RedirectUrl = "https://www.mcdonalds.com/us/en-us.html"
                        });
                });

            modelBuilder.Entity("NewsAggregator.Domain.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalArticleUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Article", (string)null);
                });

            modelBuilder.Entity("NewsAggregator.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Politics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Business"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tech"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Gaming"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Showbiz"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("NewsAggregator.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("NewsAggregator.Domain.Entities.RSSFeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("FeedUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("RSSFeed", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            FeedUrl = "https://moxie.foxnews.com/google-publisher/politics.xml",
                            IsActive = true,
                            Name = "Fox news - bussines"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            FeedUrl = "https://moxie.foxnews.com/google-publisher/science.xml",
                            IsActive = true,
                            Name = "Fox news - science"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            FeedUrl = "https://moxie.foxnews.com/google-publisher/tech.xml",
                            IsActive = true,
                            Name = "Fox news - technology"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 7,
                            FeedUrl = "https://moxie.foxnews.com/google-publisher/sports.xml",
                            IsActive = true,
                            Name = "Fox news - sports"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 8,
                            FeedUrl = " https://moxie.foxnews.com/google-publisher/travel.xml",
                            IsActive = true,
                            Name = "Fox news - travel"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 8,
                            FeedUrl = " https://moxie.foxnews.com/google-publisher/health.xml",
                            IsActive = true,
                            Name = "Fox news - health"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            FeedUrl = "https://rss.nytimes.com/services/xml/rss/nyt/Business.xml",
                            IsActive = true,
                            Name = "New York Times - bussines"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            FeedUrl = "https://rss.nytimes.com/services/xml/rss/nyt/Science.xml",
                            IsActive = true,
                            Name = "New York Times - science"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 4,
                            FeedUrl = "https://rss.nytimes.com/services/xml/rss/nyt/Technology.xml",
                            IsActive = true,
                            Name = "New York Times - tehcnology"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 7,
                            FeedUrl = "https://rss.nytimes.com/services/xml/rss/nyt/Sports.xml",
                            IsActive = true,
                            Name = "New York Times - sports"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 8,
                            FeedUrl = "https://rss.nytimes.com/services/xml/rss/nyt/Health.xml",
                            IsActive = true,
                            Name = "New York Times - health"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 8,
                            FeedUrl = "https://rss.nytimes.com/services/xml/rss/nyt/Travel.xml",
                            IsActive = true,
                            Name = "New York Times - travel"
                        });
                });

            modelBuilder.Entity("NewsAggregator.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "bob@email.com",
                            FirstName = "Bob",
                            IsAdmin = false,
                            LastName = "Bobsky",
                            Password = "H,?????mI??I8",
                            Username = "bBobsky"
                        },
                        new
                        {
                            Id = 2,
                            Email = "john.doe@email.com",
                            FirstName = "Jon",
                            IsAdmin = false,
                            LastName = "Doe",
                            Password = "H,?????mI??I8",
                            Username = "jDoe"
                        },
                        new
                        {
                            Id = 3,
                            Email = "tom@admin.com",
                            FirstName = "Tom",
                            IsAdmin = true,
                            LastName = "Admin",
                            Password = "?:{?s%?i?? ",
                            Username = "adminTom"
                        },
                        new
                        {
                            Id = 4,
                            Email = "jill@admin.com",
                            FirstName = "Jill",
                            IsAdmin = true,
                            LastName = "Admin",
                            Password = "?:{?s%?i?? ",
                            Username = "adminJill"
                        });
                });

            modelBuilder.Entity("NewsAggregator.Domain.Entities.Article", b =>
                {
                    b.HasOne("NewsAggregator.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NewsAggregator.Domain.Entities.Comment", b =>
                {
                    b.HasOne("NewsAggregator.Domain.Entities.Article", "Article")
                        .WithMany("ArticleComments")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsAggregator.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewsAggregator.Domain.Entities.RSSFeed", b =>
                {
                    b.HasOne("NewsAggregator.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NewsAggregator.Domain.Entities.Article", b =>
                {
                    b.Navigation("ArticleComments");
                });
#pragma warning restore 612, 618
        }
    }
}
